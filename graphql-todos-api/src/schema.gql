# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Todo {
  id: ID!
  title: String!
  description: String!
  state: String!
  createdAt: Date!
  createdBy: Account!
}

type Account {
  id: ID!
  name: String!
  lastname: String!
  email: String!
  password: String!
  role: String!
  isActive: Boolean!
  lastUpdatedBy: Account
  todos: [Todo!]!
}

type AccountAuthenticatedResponse {
  token: String!
  account: Account!
}

"""Date custom scalar type"""
scalar Date

type Query {
  findOneById(id: ID!): Account!
  findOneBy(id: ID!): Todo!
  findMany: [Todo!]!
}

type Mutation {
  login(loginInput: LoginInput!): AccountAuthenticatedResponse!
  register(registerInput: CreateAccountInput!): AccountAuthenticatedResponse!
  updateAccount(updateInput: UpdateAccountInput!): Account!
  switchAccountActivation(updateInput: UpdateAccountInput!): Account!
  createTodo(createTodoInput: CreateTodoInput!): Todo!
  updateTodo(updateTodoInput: UpdateTodoInput!): Todo!
  changeStateTodo(changeTodoState: ChangeTodoState!): Todo!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateAccountInput {
  name: String!
  lastname: String!
  email: String!
  password: String!
  role: ValidRole = user
}

enum ValidRole {
  admin
  user
  superuser
}

input UpdateAccountInput {
  id: ID!
  name: String
  lastname: String
  email: String
  password: String
  role: ValidRole
  isActive: Boolean
}

input CreateTodoInput {
  title: String!
  description: String!
}

input UpdateTodoInput {
  id: ID!
  title: String
  description: String
  state: TodoState
}

enum TodoState {
  done
  pending
  inpause
}

input ChangeTodoState {
  id: ID!
  state: TodoState!
}